{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\alumuka-project\\\\alumuka\\\\src\\\\Components\\\\ChangeUserName.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { resetUserName } from '../Redux/Actions/ClientActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChangeUserName(props) {\n  _s();\n  const [userName, setUsername] = useState('');\n  const client = useSelector(state => {\n    var _state$ClientReducers;\n    return (_state$ClientReducers = state.ClientReducers.client) === null || _state$ClientReducers === void 0 ? void 0 : _state$ClientReducers.client;\n  });\n  const dispatch = useDispatch();\n  const save = async () => {\n    if (userName) {\n      await dispatch(resetUserName(client._id, userName));\n      props.setShow(\"0\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"formBasicPassword2\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Enter new UserName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Enter new UserName\",\n          onChange: e => setUsername(e.target.value),\n          className: \"rounded-start-pill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          className: \"p-0\",\n          style: {\n            border: '0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between my-3\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#b47651\",\n          borderColor: \"#b47651\"\n        },\n        onClick: () => props.setShow(\"0\"),\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#b0572d\",\n          borderColor: \"#b0572d\"\n        },\n        onClick: save,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(ChangeUserName, \"ROy3zk+KkO/vnIRjpVRIVzlN8wk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ChangeUserName;\nexport default ChangeUserName;\nvar _c;\n$RefreshReg$(_c, \"ChangeUserName\");","map":{"version":3,"names":["React","useState","Button","Form","InputGroup","resetUserName","useDispatch","useSelector","jsxDEV","_jsxDEV","ChangeUserName","props","_s","userName","setUsername","client","state","_state$ClientReducers","ClientReducers","dispatch","save","_id","setShow","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","onChange","e","target","value","Text","style","border","backgroundColor","borderColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/alumuka-project/alumuka/src/Components/ChangeUserName.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { resetUserName } from '../Redux/Actions/ClientActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ChangeUserName(props) {\n    const [userName, setUsername] = useState('');\n    const client = useSelector(state => state.ClientReducers.client?.client);\n    const dispatch = useDispatch();\nconst save = async () =>{\n  if (userName) {\n    await dispatch(resetUserName(client._id, userName));\n    props.setShow(\"0\")\n  }\n  }\n  return (\n    <div>\n          <Form.Group className=\"mb-4\" controlId=\"formBasicPassword2\">\n              <Form.Label>Enter new UserName</Form.Label>\n              <InputGroup className=\"mb-4\">\n                <Form.Control \n                  placeholder=\"Enter new UserName\"\n                  onChange={(e) => setUsername(e.target.value)}\n                  className='rounded-start-pill'\n                />\n                <InputGroup.Text className='p-0' style={{border:'0'}}>\n                </InputGroup.Text>\n              </InputGroup>\n              </Form.Group>\n\n          <div className='d-flex justify-content-between my-3'>\n          <Button  \n                        style={{backgroundColor:\"#b47651\" , borderColor:\"#b47651\"}}\n\n          onClick={() => props.setShow(\"0\")}>\n            back\n          </Button>\n          <Button \n          style={{backgroundColor:\"#b0572d\" , borderColor:\"#b0572d\"}}\n          onClick={save}>\n            Save Changes\n          </Button>\n          </div>\n    </div>\n  )\n}\n\nexport default ChangeUserName\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}